# Brux Studio - Hostinger .htaccess Configuration
# Optimized for Next.js static export deployment

# ==============================================================================
# HTTPS Redirect (Force SSL)
# ==============================================================================
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# ==============================================================================
# WWW to non-WWW Redirect (or vice versa)
# ==============================================================================
# Redirect www to non-www (recommended for bruxstudio.it)
RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
RewriteRule ^(.*)$ https://%1/$1 [R=301,L]

# ==============================================================================
# Security Headers
# ==============================================================================

# X-Content-Type-Options: Prevent MIME type sniffing
<IfModule mod_headers.c>
    Header always set X-Content-Type-Options "nosniff"
</IfModule>

# X-Frame-Options: Prevent clickjacking attacks
<IfModule mod_headers.c>
    Header always set X-Frame-Options "SAMEORIGIN"
</IfModule>

# X-XSS-Protection: Enable XSS filter
<IfModule mod_headers.c>
    Header always set X-XSS-Protection "1; mode=block"
</IfModule>

# Referrer-Policy: Control referrer information
<IfModule mod_headers.c>
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
</IfModule>

# Permissions-Policy: Control browser features
<IfModule mod_headers.c>
    Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"
</IfModule>

# Strict-Transport-Security (HSTS): Force HTTPS for 2 years
<IfModule mod_headers.c>
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
</IfModule>

# Content-Security-Policy: Advanced security (adjust as needed)
<IfModule mod_headers.c>
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com https://connect.facebook.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: http:; connect-src 'self' https://www.google-analytics.com https://www.facebook.com; frame-src 'self' https://www.facebook.com;"
</IfModule>

# ==============================================================================
# Caching and Performance
# ==============================================================================

# Enable compression for text files
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript
    AddOutputFilterByType DEFLATE application/javascript application/x-javascript application/json application/xml
    AddOutputFilterByType DEFLATE image/svg+xml
</IfModule>

# Browser Caching
<IfModule mod_expires.c>
    ExpiresActive On

    # Images
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/x-icon "access plus 1 year"

    # CSS and JavaScript
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType application/x-javascript "access plus 1 month"

    # Fonts
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"

    # HTML and XML
    ExpiresByType text/html "access plus 0 seconds"
    ExpiresByType application/xml "access plus 0 seconds"
    ExpiresByType text/xml "access plus 0 seconds"

    # Manifest and other
    ExpiresByType application/json "access plus 0 seconds"
    ExpiresByType application/manifest+json "access plus 1 week"
</IfModule>

# Cache-Control headers
<IfModule mod_headers.c>
    # Images (1 year)
    <FilesMatch "\.(jpg|jpeg|png|gif|webp|svg|ico)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>

    # CSS and JS (1 month)
    <FilesMatch "\.(css|js)$">
        Header set Cache-Control "public, max-age=2592000"
    </FilesMatch>

    # Fonts (1 year)
    <FilesMatch "\.(woff|woff2|ttf|otf|eot)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
</IfModule>

# ==============================================================================
# Next.js Static Export Routing
# ==============================================================================

# Rewrite trailing slashes (Next.js with trailingSlash: true)
DirectoryIndex index.html

# Handle clean URLs for Next.js static pages
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /

    # Redirect /page to /page/
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_URI} !(.*)/$
    RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1/ [L,R=301]

    # Serve index.html for directories
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME}.html -f
    RewriteRule ^(.*)$ $1.html [L]

    # Handle /page/ requests
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME}/index.html -f
    RewriteRule ^(.*)$ $1/index.html [L]
</IfModule>

# ==============================================================================
# File Protection
# ==============================================================================

# Protect sensitive files
<FilesMatch "(^#.*#|\.(bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$">
    Order allow,deny
    Deny from all
    Satisfy All
</FilesMatch>

# Protect .git directory
<DirectoryMatch "\.git">
    Order allow,deny
    Deny from all
</DirectoryMatch>

# Protect environment files
<FilesMatch "^\.env">
    Order allow,deny
    Deny from all
</FilesMatch>

# ==============================================================================
# Error Pages (Optional - create custom error pages)
# ==============================================================================
# ErrorDocument 404 /404.html
# ErrorDocument 500 /500.html

# ==============================================================================
# Charset UTF-8
# ==============================================================================
AddDefaultCharset UTF-8
<IfModule mod_headers.c>
    Header always set Charset "utf-8"
</IfModule>

# ==============================================================================
# ETags
# ==============================================================================
<IfModule mod_headers.c>
    Header unset ETag
</IfModule>
FileETag None

# ==============================================================================
# Prevent Directory Listing
# ==============================================================================
Options -Indexes

# ==============================================================================
# Allow CORS for fonts and assets (if needed)
# ==============================================================================
<IfModule mod_headers.c>
    <FilesMatch "\.(ttf|ttc|otf|eot|woff|woff2|font.css)$">
        Header set Access-Control-Allow-Origin "*"
    </FilesMatch>
</IfModule>
